server:
  port: 8090
  context-path: /
  maxPostSize: 0
spring:
  application.name: eureka_server
  profiles: peer1

#而当我们需要使用CGLIB来实现AOP的时候，需要配置 spring.aop.proxy-target-class=true ，不然默认使用的是标准Java的实现
spring.aop.proxy-target-class: true

#JACKSON
spring.jackson:
  date-format: "yyyy-MM-dd HH:mm:ss"
  default-property-inclusion: NON_NULL
  time-zone: GMT+8



eureka:
  instance:
      hostname: peer1
  client:
#    register-with-eureka: false
#    fetch-registry: false
    serviceUrl:
    #单节点
#      defaultZone: http://localhost:${server.port}/eureka
      defaultZone: http://peer2:8091/eureka

---
server:
  port: 8091
  context-path: /
  maxPostSize: 0
spring:
  application.name: eureka_server
  profiles: peer2

#而当我们需要使用CGLIB来实现AOP的时候，需要配置 spring.aop.proxy-target-class=true ，不然默认使用的是标准Java的实现
spring.aop.proxy-target-class: true

#JACKSON
spring.jackson:
  date-format: "yyyy-MM-dd HH:mm:ss"
  default-property-inclusion: NON_NULL
  time-zone: GMT+8


eureka:
  instance:
      hostname: peer2
  client:
#    register-with-eureka: false
#    fetch-registry: false
#    service-url: http://localhost:${server.port}/eureka
    serviceUrl:
#      defaultZone: http://localhost:${server.port}/eureka   单节点
      defaultZone: http://peer1:8090/eureka

---
spring:
  profiles:
    active: peer1